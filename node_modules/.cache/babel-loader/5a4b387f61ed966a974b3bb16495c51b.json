{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\user\\\\Desktop\\\\HW11\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  books: [],\n  loading: true,\n  cartItems: [],\n  totalOrder: 0\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"BOOKS_LOADED\":\n      return _objectSpread({}, state, {\n        books: action.payload,\n        loading: false\n      });\n\n    case \"BOOKS_ADD_TO_CART\":\n      var cartBook = state.books.find(function (book) {\n        return book.id === action.payload;\n      });\n      console.log();\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.concat(cartBook)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/user/Desktop/HW11/src/reducers/index.js"],"names":["initialState","books","loading","cartItems","totalOrder","reducer","state","action","type","payload","cartBook","find","book","id","console","log","concat"],"mappings":";AAAA,IAAMA,YAAY,GAAG;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,OAAO,EAAE,IAFW;AAGpBC,EAAAA,SAAS,EAAE,EAHS;AAIpBC,EAAAA,UAAU,EAAE;AAJQ,CAArB;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,cAAL;AACC,+BACIF,KADJ;AAECL,QAAAA,KAAK,EAAEM,MAAM,CAACE,OAFf;AAGCP,QAAAA,OAAO,EAAE;AAHV;;AAMD,SAAK,mBAAL;AACC,UAAMQ,QAAQ,GAAGJ,KAAK,CAACL,KAAN,CAAYU,IAAZ,CAAiB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACE,OAAvB;AAAA,OAArB,CAAjB;AACHK,MAAAA,OAAO,CAACC,GAAR;AAEG,+BACIT,KADJ;AAECH,QAAAA,SAAS,EAAEG,KAAK,CAACH,SAAN,CAAgBa,MAAhB,CAAuBN,QAAvB;AAFZ;;AAID;AACC,aAAOJ,KAAP;AAjBF;AAmBA,CApBD;;AAsBA,eAAeD,OAAf","sourcesContent":["const initialState = {\n\tbooks: [],\n\tloading: true,\n\tcartItems: [],\n\ttotalOrder: 0,\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase \"BOOKS_LOADED\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tbooks: action.payload,\n\t\t\t\tloading: false,\n\t\t\t};\n\n\t\tcase \"BOOKS_ADD_TO_CART\":\n\t\t\tconst cartBook = state.books.find(book => book.id === action.payload);\nconsole.log();\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartItems: state.cartItems.concat(cartBook),\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}