{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\user\\\\Desktop\\\\HW11\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  books: [],\n  loading: true,\n  cartItems: [],\n  totalOrder: 0\n};\n\nvar updateCart = function updateCart(state, action, amount) {\n  var cartBook = state.books.find(function (book) {\n    return book.id === action.payload;\n  });\n  var searchBook = state.cartItems.find(function (book) {\n    return book.id === action.payload;\n  });\n\n  if (searchBook) {\n    var cartItems = tate.cartItems.map(function (item) {\n      if (item.id === searchBook.id) {\n        item.count += amount;\n        item.price += cartBook.price * amount;\n      }\n\n      return item;\n    });\n    return _objectSpread({}, state, {\n      cartItems: cartItems\n    });\n  } else {\n    var newCartBook = {\n      id: cartBook.id,\n      title: cartBook.title,\n      price: cartBook.price,\n      count: 0\n    };\n    return _objectSpread({}, state, {\n      cartItems: state.cartItems.concat(newCartBook)\n    });\n  }\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"BOOKS_LOADED\":\n      return _objectSpread({}, state, {\n        books: action.payload,\n        loading: false\n      });\n\n    case \"BOOKS_ADD_TO_CART\":\n      return updateCart(state, action, 1);\n\n    case \"BOOKS_REMOVE_TO_CART\":\n      return updateCart(state, action, -1);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/user/Desktop/HW11/src/reducers/index.js"],"names":["initialState","books","loading","cartItems","totalOrder","updateCart","state","action","amount","cartBook","find","book","id","payload","searchBook","tate","map","item","count","price","newCartBook","title","concat","reducer","type"],"mappings":";AAAA,IAAMA,YAAY,GAAG;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,OAAO,EAAE,IAFW;AAGpBC,EAAAA,SAAS,EAAE,EAHS;AAIpBC,EAAAA,UAAU,EAAE;AAJQ,CAArB;;AAOA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAQC,MAAR,EAAgBC,MAAhB,EAA2B;AAC7C,MAAMC,QAAQ,GAAGH,KAAK,CAACL,KAAN,CAAYS,IAAZ,CAAiB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAvB;AAAA,GAArB,CAAjB;AACA,MAAMC,UAAU,GAAGR,KAAK,CAACH,SAAN,CAAgBO,IAAhB,CAAqB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAvB;AAAA,GAAzB,CAAnB;;AAEA,MAAIC,UAAJ,EAAgB;AACf,QAAMX,SAAS,GAAGY,IAAI,CAACZ,SAAL,CAAea,GAAf,CAAmB,UAAAC,IAAI,EAAI;AAC5C,UAAIA,IAAI,CAACL,EAAL,KAAYE,UAAU,CAACF,EAA3B,EAA+B;AAC9BK,QAAAA,IAAI,CAACC,KAAL,IAAcV,MAAd;AACAS,QAAAA,IAAI,CAACE,KAAL,IAAcV,QAAQ,CAACU,KAAT,GAAiBX,MAA/B;AACA;;AAED,aAAOS,IAAP;AACA,KAPiB,CAAlB;AAQA,6BACIX,KADJ;AAECH,MAAAA,SAAS,EAAEA;AAFZ;AAIA,GAbD,MAaO;AACN,QAAMiB,WAAW,GAAG;AACnBR,MAAAA,EAAE,EAAEH,QAAQ,CAACG,EADM;AAEnBS,MAAAA,KAAK,EAAEZ,QAAQ,CAACY,KAFG;AAGnBF,MAAAA,KAAK,EAAEV,QAAQ,CAACU,KAHG;AAInBD,MAAAA,KAAK,EAAE;AAJY,KAApB;AAMA,6BACIZ,KADJ;AAECH,MAAAA,SAAS,EAAEG,KAAK,CAACH,SAAN,CAAgBmB,MAAhB,CAAuBF,WAAvB;AAFZ;AAIA;AACD,CA7BD;;AA+BA,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCjB,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AACjD,UAAQA,MAAM,CAACiB,IAAf;AACC,SAAK,cAAL;AACC,+BACIlB,KADJ;AAECL,QAAAA,KAAK,EAAEM,MAAM,CAACM,OAFf;AAGCX,QAAAA,OAAO,EAAE;AAHV;;AAMD,SAAK,mBAAL;AACC,aAAOG,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAgB,CAAhB,CAAjB;;AAED,SAAK,sBAAL;AACC,aAAOF,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAgB,CAAC,CAAjB,CAAjB;;AAED;AACC,aAAOD,KAAP;AAfF;AAiBA,CAlBD;;AAoBA,eAAeiB,OAAf","sourcesContent":["const initialState = {\n\tbooks: [],\n\tloading: true,\n\tcartItems: [],\n\ttotalOrder: 0,\n};\n\nconst updateCart = (state, action, amount) => {\n\tconst cartBook = state.books.find(book => book.id === action.payload);\n\tconst searchBook = state.cartItems.find(book => book.id === action.payload);\n\n\tif (searchBook) {\n\t\tconst cartItems = tate.cartItems.map(item => {\n\t\t\tif (item.id === searchBook.id) {\n\t\t\t\titem.count += amount;\n\t\t\t\titem.price += cartBook.price * amount;\n\t\t\t}\n\n\t\t\treturn item;\n\t\t});\n\t\treturn {\n\t\t\t...state,\n\t\t\tcartItems: cartItems,\n\t\t};\n\t} else {\n\t\tconst newCartBook = {\n\t\t\tid: cartBook.id,\n\t\t\ttitle: cartBook.title,\n\t\t\tprice: cartBook.price,\n\t\t\tcount: 0,\n\t\t};\n\t\treturn {\n\t\t\t...state,\n\t\t\tcartItems: state.cartItems.concat(newCartBook),\n\t\t};\n\t}\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase \"BOOKS_LOADED\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tbooks: action.payload,\n\t\t\t\tloading: false,\n\t\t\t};\n\n\t\tcase \"BOOKS_ADD_TO_CART\":\n\t\t\treturn updateCart(state, action, 1);\n\n\t\tcase \"BOOKS_REMOVE_TO_CART\":\n\t\t\treturn updateCart(state, action, -1);\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}